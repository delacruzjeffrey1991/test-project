import { getActiveClient } from './activeClient';

/**
 * ```js
 * import { disconnectClient } from '@amityco/ts-sdk'
 * const success = await disconnectClient()
 * ```
 *
 * Disconnects an {@link Amity.Client} instance from ASC servers
 *
 * @param client The {@link Amity.Client} instance to disconnect
 * @returns a success boolean if disconnected
 *
 * @category Client API
 * @async
 */
export const disconnectClient = async (): Promise<boolean> => {
  const client = getActiveClient();
  client.log('client/api/disconnectClient');

  await new Promise(resolve => {
    client.ws.once('disconnect', resolve);
    client.ws.disconnect();
    client.mqtt.disconnect();
  });

  client.emitter.all.clear();
  // FIXME: it removes listener in ws.ts, it breaks global ban event
  client.ws.removeAllListeners();
  client.mqtt.removeAllListeners();
  client.userId = undefined;
  client.accessToken = undefined;

  return !client.ws.connected;
};
