import { PAYLOAD2MODEL, getResolver } from '~/core/model';

import { upsertInCache } from './upsertInCache';

/**
 * Ingest a payload (v3) into the cache
 *
 * @param payload a "backend v3" payload object
 * @param order the order of the keys to process (in case of need)
 *
 * @category Cache
 * @hidden
 */
export const ingestInCache = (
  payload: Record<string, Record<string, unknown>[]> = {},
  options?: Amity.CacheOptions,
) => {
  Object.entries(payload).forEach(([key, models]) => {
    const type = PAYLOAD2MODEL[key];
    if (!type) return;

    const resolver = getResolver(type);
    models.forEach(model => {
      upsertInCache(
        // eslint-disable @typescript-eslint no-explicit-any
        [type, 'get', resolver(model as any)], // this 'any' cannot be avoided, sorry.
        model,
        options,
      );
    });
  });
};
