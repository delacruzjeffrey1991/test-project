import { getActiveClient } from '~/client/api';

import { ingestInCache } from '~/cache/api/ingestInCache';
import { fireEvent } from '~/core/events';

/**
 * ```js
 * import { joinCommunity } from '@amityco/ts-sdk'
 * const isJoined = await joinCommunity('foobar')
 * ```
 *
 * Joins a {@link Amity.Community} object
 *
 * @param communityId the {@link Amity.Community} to join
 * @returns A success boolean if the {@link Amity.Community} was joined
 *
 * @category Community API
 * @async
 */
export const joinCommunity = async (
  communityId: Amity.Community['communityId'],
): Promise<boolean> => {
  const client = getActiveClient();
  client.log('community/joinCommunity', communityId);

  const { data } = await client.http.post<Amity.CommunityMembershipPayload>(
    `/api/v3/communities/${communityId}/join`,
  );

  const cachedAt = client.cache && Date.now();
  if (client.cache) ingestInCache(data, { cachedAt });

  fireEvent('community.joined', data);

  const { communityUsers } = data;

  return !!communityUsers.find(
    communityUser =>
      communityUser.communityId === communityId && communityUser.communityMembership === 'member',
  );
};
