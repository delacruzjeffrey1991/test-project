import { getActiveClient } from '~/client/api';

import { toPage, toToken } from '~/core/query';
import { ingestInCache } from '~/cache/api/ingestInCache';

/**
 * ```js
 * import { queryCommunityMembers } from '@amityco/ts-sdk'
 * const communityMembers = await queryCommunityMembers({ communityId: 'foo' })
 * ```
 *
 * Queries a paginable list of {@link Amity.CommunityUser} objects
 *
 * @param query The query parameters
 * @returns A page of {@link Amity.CommunityUser} objects
 *
 * @category Community API
 * @async
 * */
export const queryCommunityMembers = async (query: {
  communityId: string;
  membership?: ('banned' | 'member')[];
  roles?: string[];
  sortBy?: 'firstCreated' | 'lastCreated';
  page?: Amity.Page;
}): Promise<Amity.Cached<Amity.Paged<Amity.Membership<'community'>>>> => {
  const client = getActiveClient();
  client.log('community/queryCommunityMembers', query);

  const { page, communityId, ...params } = query ?? {};

  const { data } = await client.http.get<Amity.CommunityMembershipPayload & Amity.Pagination>(
    `/api/v3/communities/${communityId}/users`,
    {
      params: {
        ...params,
        options: {
          token: toToken(page, 'skiplimit'),
        },
      },
    },
  );

  const { paging, ...payload } = data;
  const { communityUsers } = payload;

  const cachedAt = client.cache && Date.now();
  if (client.cache) {
    ingestInCache(payload as Amity.CommunityMembershipPayload, { cachedAt });
  }

  const nextPage = toPage(paging.next);
  const prevPage = toPage(paging.previous);

  return { data: communityUsers, cachedAt, nextPage, prevPage };
};

/**
 * ```js
 * import { queryCommunityMembers } from '@amityco/ts-sdk'
 * const communityMembers = await queryCommunityMembers(query)
 * ```
 *
 * Queries a paginable list of {@link Amity.Post} objects from cache
 *
 * @param query The query parameters
 * @returns posts
 *
 * @category Post API
 */
queryCommunityMembers.locally = (query: Parameters<typeof queryCommunityMembers>[0]) => {
  const client = getActiveClient();
  client.log('community/queryCommunityMembers', query);

  // TODO
};
