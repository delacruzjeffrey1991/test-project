import { disableCache, enableCache } from '~/cache/api';

import {
  client,
  connectClient,
  disconnectClient,
  channel11,
  channelUser1,
  channelUser5,
} from '~/utils/tests';

import { onChannelMemberBanned } from '../onChannelMemberBanned';

describe('onChannelMemberBanned event', () => {
  beforeAll(async () => {
    await connectClient();
  });

  afterAll(async () => {
    await disconnectClient();
  });

  beforeEach(async () => {
    enableCache();
  });

  afterEach(disableCache);

  const channelPayload: Amity.ChannelMembershipPayload = {
    channelUsers: [channelUser1, channelUser5],
    channels: [channel11],
    files: [],
    users: [],
  };

  test('it should call callback with channel and banned member', () => {
    const callback = jest.fn();

    const unsub = onChannelMemberBanned(callback);
    client.emitter.emit('v3.channel.didBan', channelPayload);

    unsub();

    expect(callback).toHaveBeenCalled();
    expect(callback).toHaveBeenCalledWith(channel11, channelUser5);
  });

  test('it should return an unsubscriber', () => {
    const callback = jest.fn();

    const unsub = onChannelMemberBanned(callback);
    unsub();

    client.emitter.emit('v3.channel.didBan', channelPayload);

    expect(callback).not.toHaveBeenCalled();
  });
});
