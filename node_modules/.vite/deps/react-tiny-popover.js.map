{
  "version": 3,
  "sources": ["../../../../Amity-Social-Cloud-UIKit-Web-OpenSource/node_modules/react-tiny-popover/src/PopoverPortal.tsx", "../../../../Amity-Social-Cloud-UIKit-Web-OpenSource/node_modules/react-tiny-popover/src/util.ts", "../../../../Amity-Social-Cloud-UIKit-Web-OpenSource/node_modules/react-tiny-popover/src/useElementRef.ts", "../../../../Amity-Social-Cloud-UIKit-Web-OpenSource/node_modules/react-tiny-popover/src/usePopover.ts", "../../../../Amity-Social-Cloud-UIKit-Web-OpenSource/node_modules/react-tiny-popover/src/useMemoizedArray.ts", "../../../../Amity-Social-Cloud-UIKit-Web-OpenSource/node_modules/react-tiny-popover/src/useArrowContainer.ts", "../../../../Amity-Social-Cloud-UIKit-Web-OpenSource/node_modules/react-tiny-popover/src/ArrowContainer.tsx", "../../../../Amity-Social-Cloud-UIKit-Web-OpenSource/node_modules/react-tiny-popover/src/Popover.tsx", "dep:react-tiny-popover"],
  "sourcesContent": ["import { useLayoutEffect, FC } from 'react';\nimport { createPortal } from 'react-dom';\n\ninterface PopoverPortalProps {\n  container: Element;\n  element: Element;\n  scoutElement: Element;\n}\n\nconst PopoverPortal: FC<PopoverPortalProps> = ({ container, element, scoutElement, children }) => {\n  useLayoutEffect(() => {\n    container.appendChild(element);\n    container.appendChild(scoutElement);\n    return () => {\n      container.removeChild(element);\n      container.removeChild(scoutElement);\n    };\n  }, [container, element]);\n\n  return createPortal(children, element);\n};\n\nexport { PopoverPortal };\n", "import { PopoverPosition, PopoverState, PopoverAlign } from './index';\n\nexport const Constants = {\n  DEFAULT_ALIGN: 'center' as PopoverAlign,\n  DEFAULT_POSITIONS: ['top', 'left', 'right', 'bottom'] as PopoverPosition[],\n  EMPTY_CLIENT_RECT: {\n    top: 0,\n    left: 0,\n    bottom: 0,\n    height: 0,\n    right: 0,\n    width: 0,\n  } as ClientRect,\n} as const;\n\nexport const rectsAreEqual = (rectA: ClientRect, rectB: ClientRect) =>\n  rectA === rectB ||\n  (rectA?.bottom === rectB?.bottom &&\n    rectA?.height === rectB?.height &&\n    rectA?.left === rectB?.left &&\n    rectA?.right === rectB?.right &&\n    rectA?.top === rectB?.top &&\n    rectA?.width === rectB?.width);\n\nexport const createContainer = (\n  containerStyle?: Partial<CSSStyleDeclaration>,\n  containerClassName?: string,\n) => {\n  const container = window.document.createElement('div');\n  if (containerClassName) container.className = containerClassName;\n  Object.assign(container.style, containerStyle);\n  return container;\n};\n\nexport const popoverRectForPosition = (\n  position: PopoverPosition,\n  childRect: ClientRect,\n  popoverRect: ClientRect,\n  padding: number,\n  align: PopoverAlign,\n): ClientRect => {\n  const targetMidX = childRect.left + childRect.width / 2;\n  const targetMidY = childRect.top + childRect.height / 2;\n  const { width, height } = popoverRect;\n  let top: number;\n  let left: number;\n\n  switch (position) {\n    case 'left':\n      top = targetMidY - height / 2;\n      left = childRect.left - padding - width;\n      if (align === 'start') {\n        top = childRect.top;\n      }\n      if (align === 'end') {\n        top = childRect.bottom - height;\n      }\n      break;\n    case 'bottom':\n      top = childRect.bottom + padding;\n      left = targetMidX - width / 2;\n      if (align === 'start') {\n        left = childRect.left;\n      }\n      if (align === 'end') {\n        left = childRect.right - width;\n      }\n      break;\n    case 'right':\n      top = targetMidY - height / 2;\n      left = childRect.right + padding;\n      if (align === 'start') {\n        top = childRect.top;\n      }\n      if (align === 'end') {\n        top = childRect.bottom - height;\n      }\n      break;\n    default:\n      top = childRect.top - height - padding;\n      left = targetMidX - width / 2;\n      if (align === 'start') {\n        left = childRect.left;\n      }\n      if (align === 'end') {\n        left = childRect.right - width;\n      }\n      break;\n  }\n\n  return { top, left, width, height, right: left + width, bottom: top + height };\n};\n\ninterface GetNewPopoverRectProps {\n  position: PopoverPosition;\n  reposition: boolean;\n  align: PopoverAlign;\n  childRect: ClientRect;\n  popoverRect: ClientRect;\n  boundaryRect: ClientRect;\n  padding: number;\n}\n\nexport const getNewPopoverRect = (\n  {\n    position,\n    align,\n    childRect,\n    popoverRect,\n    boundaryRect,\n    padding,\n    reposition,\n  }: GetNewPopoverRectProps,\n  boundaryInset: number,\n) => {\n  const rect = popoverRectForPosition(position, childRect, popoverRect, padding, align);\n\n  const boundaryViolation =\n    reposition &&\n    ((position === 'top' && rect.top < boundaryRect.top + boundaryInset) ||\n      (position === 'left' && rect.left < boundaryRect.left + boundaryInset) ||\n      (position === 'right' && rect.right > boundaryRect.right - boundaryInset) ||\n      (position === 'bottom' && rect.bottom > boundaryRect.bottom - boundaryInset));\n\n  return {\n    rect,\n    boundaryViolation,\n  } as const;\n};\n\nexport const getNudgedPopoverRect = (\n  popoverRect: ClientRect,\n  boundaryRect: ClientRect,\n  boundaryInset: number,\n): ClientRect => {\n  const topBoundary = boundaryRect.top + boundaryInset;\n  const leftBoundary = boundaryRect.left + boundaryInset;\n  const rightBoundary = boundaryRect.right - boundaryInset;\n  const bottomBoundary = boundaryRect.bottom - boundaryInset;\n\n  let top = popoverRect.top < topBoundary ? topBoundary : popoverRect.top;\n  top = top + popoverRect.height > bottomBoundary ? bottomBoundary - popoverRect.height : top;\n  let left = popoverRect.left < leftBoundary ? leftBoundary : popoverRect.left;\n  left = left + popoverRect.width > rightBoundary ? rightBoundary - popoverRect.width : left;\n\n  return {\n    top,\n    left,\n    width: popoverRect.width,\n    height: popoverRect.height,\n    right: left + popoverRect.width,\n    bottom: top + popoverRect.height,\n  };\n};\n", "import { useRef, useMemo } from 'react';\nimport { createContainer } from './util';\n\nexport const useElementRef = (\n  containerClassName?: string,\n  containerStyle?: Partial<CSSStyleDeclaration>,\n) => {\n  const element = useMemo(\n    () => createContainer(containerStyle, containerClassName),\n    [containerClassName, containerStyle],\n  );\n\n  return useRef<HTMLDivElement>(element);\n};\n", "import { useCallback } from 'react';\nimport { BoundaryViolations, PositionPopover, UsePopoverProps, UsePopoverResult } from '.';\nimport { Constants, getNewPopoverRect, getNudgedPopoverRect } from './util';\nimport { useElementRef } from './useElementRef';\n\nexport const usePopover = ({\n  isOpen,\n  childRef,\n  positions,\n  containerClassName,\n  parentElement,\n  contentLocation,\n  align,\n  padding,\n  reposition,\n  boundaryInset,\n  boundaryElement,\n  onPositionPopover,\n}: UsePopoverProps): UsePopoverResult => {\n  const popoverRef = useElementRef(containerClassName, {\n    position: 'fixed',\n    overflow: 'visible',\n    top: '0px',\n    left: '0px',\n  });\n\n  const scoutRef = useElementRef('react-tiny-popover-scout', {\n    position: 'fixed',\n    top: '0px',\n    left: '0px',\n    width: '0px',\n    height: '0px',\n    visibility: 'hidden',\n  });\n\n  const positionPopover = useCallback<PositionPopover>(\n    ({\n      positionIndex = 0,\n      parentRect = parentElement.getBoundingClientRect(),\n      childRect = childRef?.current?.getBoundingClientRect(),\n      scoutRect = scoutRef?.current?.getBoundingClientRect(),\n      popoverRect = popoverRef.current.getBoundingClientRect(),\n      boundaryRect = boundaryElement === parentElement\n        ? parentRect\n        : boundaryElement.getBoundingClientRect(),\n    } = {}) => {\n      if (!childRect || !parentRect || !isOpen) {\n        return;\n      }\n\n      if (contentLocation) {\n        const { top: inputTop, left: inputLeft } =\n          typeof contentLocation === 'function'\n            ? contentLocation({\n                childRect,\n                popoverRect,\n                parentRect,\n                boundaryRect,\n                padding,\n                nudgedTop: 0,\n                nudgedLeft: 0,\n                boundaryInset,\n                violations: Constants.EMPTY_CLIENT_RECT,\n                hasViolations: false,\n              })\n            : contentLocation;\n\n        const left = parentRect.left + inputLeft;\n        const top = parentRect.top + inputTop;\n\n        popoverRef.current.style.transform = `translate(${left - scoutRect.left}px, ${\n          top - scoutRect.top\n        }px)`;\n\n        onPositionPopover({\n          childRect,\n          popoverRect,\n          parentRect,\n          boundaryRect,\n          padding,\n          nudgedTop: 0,\n          nudgedLeft: 0,\n          boundaryInset,\n          violations: Constants.EMPTY_CLIENT_RECT,\n          hasViolations: false,\n        });\n\n        return;\n      }\n\n      const isExhausted = positionIndex === positions.length;\n      const position = isExhausted ? positions[0] : positions[positionIndex];\n\n      const { rect, boundaryViolation } = getNewPopoverRect(\n        {\n          childRect,\n          popoverRect,\n          boundaryRect,\n          position,\n          align,\n          padding,\n          reposition,\n        },\n        boundaryInset,\n      );\n\n      if (boundaryViolation && reposition && !isExhausted) {\n        positionPopover({\n          positionIndex: positionIndex + 1,\n          childRect,\n          popoverRect,\n          parentRect,\n          boundaryRect,\n        });\n        return;\n      }\n\n      const { top, left, width, height } = rect;\n      const shouldNudge = reposition && !isExhausted;\n      const { left: nudgedLeft, top: nudgedTop } = getNudgedPopoverRect(\n        rect,\n        boundaryRect,\n        boundaryInset,\n      );\n\n      let finalTop = top;\n      let finalLeft = left;\n\n      if (shouldNudge) {\n        finalTop = nudgedTop;\n        finalLeft = nudgedLeft;\n      }\n      popoverRef.current.style.transform = `translate(${finalLeft - scoutRect.left}px, ${\n        finalTop - scoutRect.top\n      }px)`;\n\n      const potentialViolations: BoundaryViolations = {\n        top: boundaryRect.top + boundaryInset - finalTop,\n        left: boundaryRect.left + boundaryInset - finalLeft,\n        right: finalLeft + width - boundaryRect.right + boundaryInset,\n        bottom: finalTop + height - boundaryRect.bottom + boundaryInset,\n      };\n\n      onPositionPopover({\n        childRect,\n        popoverRect: {\n          top: finalTop,\n          left: finalLeft,\n          width,\n          height,\n          right: finalLeft + width,\n          bottom: finalTop + height,\n        },\n        parentRect,\n        boundaryRect,\n        position,\n        align,\n        padding,\n        nudgedTop: nudgedTop - top,\n        nudgedLeft: nudgedLeft - left,\n        boundaryInset,\n        violations: {\n          top: potentialViolations.top <= 0 ? 0 : potentialViolations.top,\n          left: potentialViolations.left <= 0 ? 0 : potentialViolations.left,\n          right: potentialViolations.right <= 0 ? 0 : potentialViolations.right,\n          bottom: potentialViolations.bottom <= 0 ? 0 : potentialViolations.bottom,\n        },\n        hasViolations:\n          potentialViolations.top > 0 ||\n          potentialViolations.left > 0 ||\n          potentialViolations.right > 0 ||\n          potentialViolations.bottom > 0,\n      });\n    },\n    [\n      parentElement,\n      childRef,\n      popoverRef,\n      boundaryElement,\n      contentLocation,\n      positions,\n      align,\n      padding,\n      reposition,\n      boundaryInset,\n      onPositionPopover,\n      isOpen,\n    ],\n  );\n\n  return {\n    positionPopover,\n    popoverRef,\n    scoutRef,\n  };\n};\n", "import { useRef, useMemo } from 'react';\n\nexport const useMemoizedArray = <T extends number | string>(externalArray: T[]) => {\n  const prevArrayRef = useRef(externalArray);\n  const array = useMemo(() => {\n    if (prevArrayRef.current === externalArray) return prevArrayRef.current;\n\n    if (prevArrayRef.current.length !== externalArray.length) {\n      prevArrayRef.current = externalArray;\n      return externalArray;\n    }\n\n    for (let i = 0; i < externalArray.length; i += 1) {\n      if (externalArray[i] !== prevArrayRef.current[i]) {\n        prevArrayRef.current = externalArray;\n        return externalArray;\n      }\n    }\n\n    return prevArrayRef.current;\n  }, [externalArray]);\n\n  return array;\n};\n", "import { useMemo } from 'react';\nimport { UseArrowContainerProps } from '.';\n\nexport const useArrowContainer = ({\n  childRect,\n  popoverRect,\n  position,\n  arrowSize,\n  arrowColor,\n}: UseArrowContainerProps) => {\n  const arrowContainerStyle = useMemo(\n    () =>\n      ({\n        padding: arrowSize,\n      } as React.CSSProperties),\n    [arrowSize],\n  );\n\n  const arrowStyle = useMemo(\n    () =>\n      ({\n        position: 'absolute',\n        ...((): React.CSSProperties => {\n          const arrowWidth = arrowSize * 2;\n          let top = childRect.top - popoverRect.top + childRect.height / 2 - arrowWidth / 2;\n          let left = childRect.left - popoverRect.left + childRect.width / 2 - arrowWidth / 2;\n\n          const lowerBound = arrowSize;\n          const leftUpperBound = popoverRect.width - arrowSize;\n          const topUpperBound = popoverRect.height - arrowSize;\n\n          left = left < lowerBound ? lowerBound : left;\n          left = left + arrowWidth > leftUpperBound ? leftUpperBound - arrowWidth : left;\n          top = top < lowerBound ? lowerBound : top;\n          top = top + arrowWidth > topUpperBound ? topUpperBound - arrowWidth : top;\n\n          top = Number.isNaN(top) ? 0 : top;\n          left = Number.isNaN(left) ? 0 : left;\n\n          switch (position) {\n            case 'right':\n              return {\n                borderTop: `${arrowSize}px solid transparent`,\n                borderBottom: `${arrowSize}px solid transparent`,\n                borderRight: `${arrowSize}px solid ${arrowColor}`,\n                left: 0,\n                top,\n              };\n            case 'left':\n              return {\n                borderTop: `${arrowSize}px solid transparent`,\n                borderBottom: `${arrowSize}px solid transparent`,\n                borderLeft: `${arrowSize}px solid ${arrowColor}`,\n                right: 0,\n                top,\n              };\n            case 'bottom':\n              return {\n                borderLeft: `${arrowSize}px solid transparent`,\n                borderRight: `${arrowSize}px solid transparent`,\n                borderBottom: `${arrowSize}px solid ${arrowColor}`,\n                top: 0,\n                left,\n              };\n            case 'top':\n              return {\n                borderLeft: `${arrowSize}px solid transparent`,\n                borderRight: `${arrowSize}px solid transparent`,\n                borderTop: `${arrowSize}px solid ${arrowColor}`,\n                bottom: 0,\n                left,\n              };\n            default:\n              return {\n                display: 'hidden',\n              };\n          }\n        })(),\n      } as React.CSSProperties),\n    [\n      arrowColor,\n      arrowSize,\n      childRect.height,\n      childRect.left,\n      childRect.top,\n      childRect.width,\n      popoverRect.height,\n      popoverRect.left,\n      popoverRect.top,\n      popoverRect.width,\n      position,\n    ],\n  );\n\n  return {\n    arrowContainerStyle,\n    arrowStyle,\n  };\n};\n", "import { useMemo, FC } from 'react';\nimport { ArrowContainerProps } from '.';\nimport { useArrowContainer } from './useArrowContainer';\n\nexport const ArrowContainer: FC<ArrowContainerProps> = ({\n  childRect,\n  popoverRect,\n  position,\n  arrowColor,\n  arrowSize,\n  arrowClassName,\n  arrowStyle: externalArrowStyle,\n  className,\n  children,\n  style: externalArrowContainerStyle,\n}) => {\n  const { arrowContainerStyle, arrowStyle } = useArrowContainer({\n    childRect,\n    popoverRect,\n    position,\n    arrowColor,\n    arrowSize,\n  });\n\n  const mergedContainerStyle = useMemo(\n    () => ({\n      ...arrowContainerStyle,\n      ...externalArrowContainerStyle,\n    }),\n    [arrowContainerStyle, externalArrowContainerStyle],\n  );\n\n  const mergedArrowStyle = useMemo(\n    () => ({\n      ...arrowStyle,\n      ...externalArrowStyle,\n    }),\n    [arrowStyle, externalArrowStyle],\n  );\n\n  return (\n    <div className={className} style={mergedContainerStyle}>\n      <div style={mergedArrowStyle} className={arrowClassName} />\n      {children}\n    </div>\n  );\n};\n", "import {\n  useRef,\n  useLayoutEffect,\n  useState,\n  useCallback,\n  useEffect,\n  forwardRef,\n  cloneElement,\n} from 'react';\nimport { PopoverPortal } from './PopoverPortal';\nimport {\n  ContentLocation,\n  ContentLocationGetter,\n  PopoverPosition,\n  PopoverProps,\n  PopoverState,\n} from '.';\nimport { Constants, rectsAreEqual } from './util';\nimport { usePopover } from './usePopover';\nimport { useMemoizedArray } from './useMemoizedArray';\n\nexport { useArrowContainer } from './useArrowContainer';\nexport { ArrowContainer } from './ArrowContainer';\nexport { usePopover };\n\nconst PopoverInternal = forwardRef<HTMLElement, PopoverProps>(\n  (\n    {\n      isOpen,\n      children,\n      content,\n      positions: externalPositions = Constants.DEFAULT_POSITIONS,\n      align = Constants.DEFAULT_ALIGN,\n      padding = 0,\n      reposition = true,\n      parentElement = window.document.body,\n      boundaryElement = parentElement,\n      containerClassName = 'react-tiny-popover-container',\n      containerStyle,\n      contentLocation,\n      boundaryInset = 0,\n      onClickOutside,\n    },\n    externalRef,\n  ) => {\n    const positions = useMemoizedArray(externalPositions);\n\n    // TODO: factor prevs out into a custom prevs hook\n    const prevIsOpen = useRef(false);\n    const prevPositions = useRef<PopoverPosition[] | undefined>();\n    const prevContentLocation = useRef<ContentLocation | ContentLocationGetter | undefined>();\n    const prevReposition = useRef(reposition);\n\n    const childRef = useRef<HTMLElement | undefined>();\n\n    const [popoverState, setPopoverState] = useState<PopoverState>({\n      align,\n      nudgedLeft: 0,\n      nudgedTop: 0,\n      position: positions[0],\n      padding,\n      childRect: Constants.EMPTY_CLIENT_RECT,\n      popoverRect: Constants.EMPTY_CLIENT_RECT,\n      parentRect: Constants.EMPTY_CLIENT_RECT,\n      boundaryRect: Constants.EMPTY_CLIENT_RECT,\n      boundaryInset,\n      violations: Constants.EMPTY_CLIENT_RECT,\n      hasViolations: false,\n    });\n\n    const onPositionPopover = useCallback(\n      (popoverState: PopoverState) => setPopoverState(popoverState),\n      [],\n    );\n\n    const { positionPopover, popoverRef, scoutRef } = usePopover({\n      isOpen,\n      childRef,\n      containerClassName,\n      parentElement,\n      boundaryElement,\n      contentLocation,\n      positions,\n      align,\n      padding,\n      boundaryInset,\n      reposition,\n      onPositionPopover,\n    });\n\n    useLayoutEffect(() => {\n      let shouldUpdate = true;\n      const updatePopover = () => {\n        if (isOpen && shouldUpdate) {\n          const childRect = childRef?.current?.getBoundingClientRect();\n          const popoverRect = popoverRef?.current?.getBoundingClientRect();\n          if (\n            childRect != null &&\n            popoverRect != null &&\n            (!rectsAreEqual(childRect, {\n              top: popoverState.childRect.top,\n              left: popoverState.childRect.left,\n              width: popoverState.childRect.width,\n              height: popoverState.childRect.height,\n              bottom: popoverState.childRect.top + popoverState.childRect.height,\n              right: popoverState.childRect.left + popoverState.childRect.width,\n            }) ||\n              popoverRect.width !== popoverState.popoverRect.width ||\n              popoverRect.height !== popoverState.popoverRect.height ||\n              popoverState.padding !== padding ||\n              popoverState.align !== align ||\n              positions !== prevPositions.current ||\n              contentLocation !== prevContentLocation.current ||\n              reposition !== prevReposition.current)\n          ) {\n            positionPopover();\n          }\n\n          // TODO: factor prev checks out into the custom prevs hook\n          if (positions !== prevPositions.current) {\n            prevPositions.current = positions;\n          }\n          if (contentLocation !== prevContentLocation.current) {\n            prevContentLocation.current = contentLocation;\n          }\n          if (reposition !== prevReposition.current) {\n            prevReposition.current = reposition;\n          }\n\n          if (shouldUpdate) {\n            window.requestAnimationFrame(updatePopover);\n          }\n        }\n\n        prevIsOpen.current = isOpen;\n      };\n\n      window.requestAnimationFrame(updatePopover);\n\n      return () => {\n        shouldUpdate = false;\n      };\n    }, [\n      align,\n      contentLocation,\n      isOpen,\n      padding,\n      popoverRef,\n      popoverState.align,\n      popoverState.childRect.height,\n      popoverState.childRect.left,\n      popoverState.childRect.top,\n      popoverState.childRect.width,\n      popoverState.padding,\n      popoverState.popoverRect.height,\n      popoverState.popoverRect.width,\n      positionPopover,\n      positions,\n      reposition,\n    ]);\n\n    useEffect(() => {\n      const popoverElement = popoverRef.current;\n\n      Object.assign(popoverElement.style, containerStyle);\n\n      return () => {\n        Object.keys(containerStyle ?? {}).forEach(\n          (key) =>\n            delete popoverElement.style[\n              key as keyof Omit<typeof containerStyle, 'length' | 'parentRule'>\n            ],\n        );\n      };\n    }, [containerStyle, isOpen, popoverRef]);\n\n    const handleOnClickOutside = useCallback(\n      (e: MouseEvent) => {\n        if (\n          isOpen &&\n          !popoverRef.current?.contains(e.target as Node) &&\n          !childRef.current?.contains(e.target as Node)\n        ) {\n          onClickOutside?.(e);\n        }\n      },\n      [isOpen, onClickOutside, popoverRef],\n    );\n\n    const handleWindowResize = useCallback(() => {\n      if (childRef.current) {\n        window.requestAnimationFrame(() => positionPopover());\n      }\n    }, [positionPopover]);\n\n    useEffect(() => {\n      window.addEventListener('click', handleOnClickOutside, true);\n      window.addEventListener('resize', handleWindowResize);\n      return () => {\n        window.removeEventListener('click', handleOnClickOutside, true);\n        window.removeEventListener('resize', handleWindowResize);\n      };\n    }, [handleOnClickOutside, handleWindowResize]);\n\n    const handleRef = useCallback(\n      (node: HTMLElement) => {\n        childRef.current = node;\n        if (externalRef != null) {\n          if (typeof externalRef === 'object') {\n            (externalRef as React.MutableRefObject<HTMLElement>).current = node;\n          } else if (typeof externalRef === 'function') {\n            (externalRef as (instance: HTMLElement) => void)(node);\n          }\n        }\n      },\n      [externalRef],\n    );\n\n    const renderChild = () =>\n      cloneElement(children as JSX.Element, {\n        ref: handleRef,\n      });\n\n    const renderPopover = () => {\n      if (!isOpen) return null;\n      return (\n        <PopoverPortal\n          element={popoverRef.current}\n          scoutElement={scoutRef.current}\n          container={parentElement}\n        >\n          {typeof content === 'function' ? content(popoverState) : content}\n        </PopoverPortal>\n      );\n    };\n\n    return (\n      <>\n        {renderChild()}\n        {renderPopover()}\n      </>\n    );\n  },\n);\n\nexport const Popover = forwardRef<HTMLElement, PopoverProps>((props, ref) => {\n  if (typeof window === 'undefined') return props.children;\n  return <PopoverInternal {...props} ref={ref} />;\n});\n", "export default require(\"../Amity-Social-Cloud-UIKit-Web-OpenSource/node_modules/react-tiny-popover/dist/Popover.js\");"],
  "mappings": "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",
  "names": ["_a", "popoverState", "_a", "_b"]
}
